version: "3.9"

x-container: &container
  image: sashapekh/influx-laravel
  volumes:
    - .:/var/www/html:cached
    - ~/.config:/var/www/.config
  env_file:
    - .env
  networks:
    - backend
  depends_on:
    - mongodb
    - redis

x-environment: &environment
  # php configuration
  PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
  PHP_XDEBUG_REMOTE_ENABLE: 1
  PHP_XDEBUG_REMOTE_CONNECT_BACK: 1
  PHP_XDEBUG_REMOTE_PORT: 9000
  PHP_XDEBUG_MODE: debug

services:
  grafana:
    image: grafana/grafana:8.0.2
    container_name: influx_grafana
    restart: unless-stopped
    env_file: ./.docker/configuration.env
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./.docker/grafana/provisioning/:/etc/grafana/provisioning/
      - ./.docker/grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - influxdb
    networks:
      - backend

  telegraf:
    image: telegraf:1.28-alpine
    container_name: influx_telegraf
    platform: linux/amd64
    user: root:1000
    volumes:
      - ./.docker/telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    ports:
      - "127.0.0.1:8125:8125/udp"
    networks:
      - backend

  influxdb:
    image: influxdb:1.8-alpine
    platform: linux/amd64
    env_file: ./.docker/configuration.env
    volumes:
      - ./.docker/:/imports
      - influxdb_data:/var/lib/influxdb
    ports:
      - "127.0.0.1:8086:8086"
    networks:
      - backend

  app:
    <<: *container
    environment:
      <<: *environment
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      target: develop
      args:
        - USER_UID=${USER_UID:-1000}
        - USER_GID=${USER_GID:-1000}
    ports:
      - "127.0.0.1:80:80/tcp"

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:2375:2375'
    environment:
      - LOG_LEVEL=debug # debug,info,notice,warning,err,crit,alert,emerg
      - CONTAINERS=1
      - INFO=1
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: influx_redis
    restart: always
    command: redis-server --requirepass root
    ports:
      - "6379:6379"
    networks:
      - backend

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - '27017:27017'
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "127.0.0.1:9200:9200/tcp"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - backend
#  elasticsearch:
#    container_name: es-container
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
#    environment:
#      - xpack.security.enabled=false
#      - "discovery.type=single-node"
#    ports:
#      - "127.0.0.1:9200:9200/tcp"
#    volumes:
#      - esdata:/usr/share/elasticsearch/data


networks:
  backend:
    driver: bridge

volumes:
  influxdb_data:
  grafana-data:
  esdata:
    driver: local
  database:
    driver: local