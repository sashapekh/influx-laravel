version: "3.9"

services:
  grafana:
    image: grafana/grafana:8.0.2
    container_name: influx_grafana
    restart: unless-stopped
    env_file: ./.docker/configuration.env
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./.docker/grafana/provisioning/:/etc/grafana/provisioning/
      - ./.docker/grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - influxdb
    networks:
      - backend

  telegraf:
    image: telegraf:1.27-alpine
    container_name: influx_telegraf
    platform: linux/amd64
    user: root:1000
    volumes:
      - ./.docker/telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    ports:
      - "127.0.0.1:8125:8125/udp"
    networks:
      - backend

  influxdb:
    image: influxdb:1.8-alpine
    platform: linux/amd64
    env_file: ./.docker/configuration.env
    volumes:
      - ./.docker/:/imports
      - influxdb_data:/var/lib/influxdb
    ports:
      - "127.0.0.1:8086:8086"
    networks:
      - backend

  api:
    container_name: influx_api
    restart: unless-stopped
    working_dir: /var/www/api
    volumes:
      - ./.:/var/www/api
      - ./.docker:/usr/local/etc/php/php.ini
    build:
      context: ./.docker/php/api
      args:
        user: developer
        uid: 1000
    depends_on:
      - nginx
      - mongo
      - redis
    networks:
      - backend

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:2375:2375'
    environment:
      - LOG_LEVEL=debug # debug,info,notice,warning,err,crit,alert,emerg
      - CONTAINERS=1
      - INFO=1
    networks:
      - backend

  nginx:
    image: nginx:alpine
    container_name: influx_nginx
    restart: unless-stopped
    ports:
      - "80:80" # rest-api
    volumes:
      - ./.:/var/www/api
      - ./.docker/nginx/sites-available:/etc/nginx/sites-available
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: influx_redis
    restart: always
    command: redis-server --requirepass root
    ports:
      - "6379:6379"
    networks:
      - backend

  mongo:
    image: mongo:latest
    container_name: influx_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - '27017:27017'
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:8.10.2
    container_name: influx_elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.zen.minimum_master_nodes=2
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  influxdb_data:
  grafana-data:
  elasticdata:
    driver: local
  database:
    driver: local